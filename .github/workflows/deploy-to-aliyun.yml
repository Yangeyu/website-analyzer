name: Website Analyzer CI/CD

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:  # 允许手动触发

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: yang-git
  IMAGE_NAME: web-analyzer
  DOCKER_USERNAME: aliy6537

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Run tests
        run: python run_tests.py

  build-and-push:
    name: Build and Push Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate version tag
        id: version
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
          VERSION_TAG="${SHORT_SHA}-$(date +%Y%m%d%H%M)"
          echo "version=${VERSION_TAG}" >> $GITHUB_OUTPUT
          echo "构建版本: $VERSION_TAG"
          
      - name: Login to Aliyun Container Registry
        run: |
          docker login \
            --username=${{ env.DOCKER_USERNAME }} \
            --password=${{ secrets.DOCKER_PASSWORD }} ${{ env.REGISTRY }}
          
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} .
          
      - name: Tag Docker images
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          
      - name: Push Docker images
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          docker push ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          
      - name: Image push summary
        run: |
          echo "✅ 镜像已成功推送:"
          echo "  - ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}"
          echo "  - ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest" 